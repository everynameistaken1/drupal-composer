version: '3'

services:

  drupal:
    build:
      context: ./Drupal-Composer
      dockerfile: ./Dockerfile
      target: ${DRUPAL_ENV}
      args:
        - repository=${REPOSITORY}
        - projectName=${PROJECT_NAME}
        - xDebug=${XDEBUG_MODE}
        - gitEmail=${GIT_EMAIL}
        - gitName=${GIT_NAME}
    container_name: drupal
    depends_on:
      - postgres
    environment:
      - ACCOUNT_NAME=${ACCOUNT_NAME}
      - ACCOUNT_MAIL=${ACCOUNT_MAIL}
      - SITE_MAIL=${SITE_MAIL}
      - SITE_NAME=${SITE_NAME}
      - ACCOUNT_PASS=${ACCOUNT_PASS}
      - SITE_PASS=${SITE_PASS}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TABLE_EXISTS=${TABLE_EXISTS}
    volumes:
      - codebase:/var/www/html
      - nvim:/root/.local

  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
      args:
        - projectName=${PROJECT_NAME}
    container_name: nginx
    environment:
      - ACCOUNT_NAME=${ACCOUNT_NAME}
      - ACCOUNT_MAIL=${ACCOUNT_MAIL}
      - SITE_MAIL=${SITE_MAIL}
      - SITE_NAME=${SITE_NAME}
      - ACCOUNT_PASS=${ACCOUNT_PASS}
      - SITE_PASS=${SITE_PASS}
    depends_on:
      - drupal
    ports:
      - ${PORT}:80
    volumes:
      - codebase:/var/www/html:ro
    restart: unless-stopped

  postgres:
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TABLE_EXISTS=${TABLE_EXISTS}
    volumes:
      - /var/lib/postgresql/data
    restart: unless-stopped

volumes:
  codebase:
  nvim: